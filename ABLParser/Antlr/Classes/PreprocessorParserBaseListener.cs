//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Antlr/Grammar/PreprocessorParser.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ABLParser.Prorefactor.Proparser.Antlr {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IPreprocessorParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class PreprocessorParserBaseListener : IPreprocessorParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="PreprocessorParser.preproIfEval"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPreproIfEval([NotNull] PreprocessorParser.PreproIfEvalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="PreprocessorParser.preproIfEval"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPreproIfEval([NotNull] PreprocessorParser.PreproIfEvalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>not</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNot([NotNull] PreprocessorParser.NotContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>not</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNot([NotNull] PreprocessorParser.NotContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>comparison</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparison([NotNull] PreprocessorParser.ComparisonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>comparison</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparison([NotNull] PreprocessorParser.ComparisonContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>or</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOr([NotNull] PreprocessorParser.OrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>or</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOr([NotNull] PreprocessorParser.OrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryPlus</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryPlus([NotNull] PreprocessorParser.UnaryPlusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryPlus</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryPlus([NotNull] PreprocessorParser.UnaryPlusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>and</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnd([NotNull] PreprocessorParser.AndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>and</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnd([NotNull] PreprocessorParser.AndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unaryMinus</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryMinus([NotNull] PreprocessorParser.UnaryMinusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryMinus</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryMinus([NotNull] PreprocessorParser.UnaryMinusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>atomExpr</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtomExpr([NotNull] PreprocessorParser.AtomExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>atomExpr</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtomExpr([NotNull] PreprocessorParser.AtomExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>multiply</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiply([NotNull] PreprocessorParser.MultiplyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multiply</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiply([NotNull] PreprocessorParser.MultiplyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>plus</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPlus([NotNull] PreprocessorParser.PlusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>plus</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPlus([NotNull] PreprocessorParser.PlusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>functionExpr</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionExpr([NotNull] PreprocessorParser.FunctionExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionExpr</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionExpr([NotNull] PreprocessorParser.FunctionExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>stringOp</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringOp([NotNull] PreprocessorParser.StringOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>stringOp</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringOp([NotNull] PreprocessorParser.StringOpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>number</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] PreprocessorParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>number</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] PreprocessorParser.NumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>quotedString</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuotedString([NotNull] PreprocessorParser.QuotedStringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>quotedString</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuotedString([NotNull] PreprocessorParser.QuotedStringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>trueExpr</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrueExpr([NotNull] PreprocessorParser.TrueExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>trueExpr</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrueExpr([NotNull] PreprocessorParser.TrueExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>falseExpr</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFalseExpr([NotNull] PreprocessorParser.FalseExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>falseExpr</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFalseExpr([NotNull] PreprocessorParser.FalseExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>unknownExpr</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnknownExpr([NotNull] PreprocessorParser.UnknownExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unknownExpr</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnknownExpr([NotNull] PreprocessorParser.UnknownExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>exprInParen</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExprInParen([NotNull] PreprocessorParser.ExprInParenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>exprInParen</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExprInParen([NotNull] PreprocessorParser.ExprInParenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>absoluteFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAbsoluteFunction([NotNull] PreprocessorParser.AbsoluteFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>absoluteFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAbsoluteFunction([NotNull] PreprocessorParser.AbsoluteFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ascFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAscFunction([NotNull] PreprocessorParser.AscFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ascFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAscFunction([NotNull] PreprocessorParser.AscFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>dateFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDateFunction([NotNull] PreprocessorParser.DateFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>dateFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDateFunction([NotNull] PreprocessorParser.DateFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>dayFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDayFunction([NotNull] PreprocessorParser.DayFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>dayFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDayFunction([NotNull] PreprocessorParser.DayFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>dbTypeFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDbTypeFunction([NotNull] PreprocessorParser.DbTypeFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>dbTypeFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDbTypeFunction([NotNull] PreprocessorParser.DbTypeFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>decimalFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecimalFunction([NotNull] PreprocessorParser.DecimalFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>decimalFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecimalFunction([NotNull] PreprocessorParser.DecimalFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>encodeFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEncodeFunction([NotNull] PreprocessorParser.EncodeFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>encodeFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEncodeFunction([NotNull] PreprocessorParser.EncodeFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>entryFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEntryFunction([NotNull] PreprocessorParser.EntryFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>entryFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEntryFunction([NotNull] PreprocessorParser.EntryFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>etimeFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEtimeFunction([NotNull] PreprocessorParser.EtimeFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>etimeFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEtimeFunction([NotNull] PreprocessorParser.EtimeFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpFunction([NotNull] PreprocessorParser.ExpFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpFunction([NotNull] PreprocessorParser.ExpFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>fillFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFillFunction([NotNull] PreprocessorParser.FillFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>fillFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFillFunction([NotNull] PreprocessorParser.FillFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>indexFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexFunction([NotNull] PreprocessorParser.IndexFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>indexFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexFunction([NotNull] PreprocessorParser.IndexFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>integerFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegerFunction([NotNull] PreprocessorParser.IntegerFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>integerFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegerFunction([NotNull] PreprocessorParser.IntegerFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>int64Function</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInt64Function([NotNull] PreprocessorParser.Int64FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>int64Function</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInt64Function([NotNull] PreprocessorParser.Int64FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>keywordFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeywordFunction([NotNull] PreprocessorParser.KeywordFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>keywordFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeywordFunction([NotNull] PreprocessorParser.KeywordFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>keywordAllFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeywordAllFunction([NotNull] PreprocessorParser.KeywordAllFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>keywordAllFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeywordAllFunction([NotNull] PreprocessorParser.KeywordAllFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>lcFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLcFunction([NotNull] PreprocessorParser.LcFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lcFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLcFunction([NotNull] PreprocessorParser.LcFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>leftTrimFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLeftTrimFunction([NotNull] PreprocessorParser.LeftTrimFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>leftTrimFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLeftTrimFunction([NotNull] PreprocessorParser.LeftTrimFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>lengthFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLengthFunction([NotNull] PreprocessorParser.LengthFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lengthFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLengthFunction([NotNull] PreprocessorParser.LengthFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>libraryFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLibraryFunction([NotNull] PreprocessorParser.LibraryFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>libraryFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLibraryFunction([NotNull] PreprocessorParser.LibraryFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>logFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogFunction([NotNull] PreprocessorParser.LogFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>logFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogFunction([NotNull] PreprocessorParser.LogFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>lookupFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLookupFunction([NotNull] PreprocessorParser.LookupFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lookupFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLookupFunction([NotNull] PreprocessorParser.LookupFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>maximumFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMaximumFunction([NotNull] PreprocessorParser.MaximumFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>maximumFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMaximumFunction([NotNull] PreprocessorParser.MaximumFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>memberFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberFunction([NotNull] PreprocessorParser.MemberFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>memberFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberFunction([NotNull] PreprocessorParser.MemberFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>minimumFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMinimumFunction([NotNull] PreprocessorParser.MinimumFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>minimumFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMinimumFunction([NotNull] PreprocessorParser.MinimumFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>monthFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMonthFunction([NotNull] PreprocessorParser.MonthFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>monthFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMonthFunction([NotNull] PreprocessorParser.MonthFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>numEntriesFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumEntriesFunction([NotNull] PreprocessorParser.NumEntriesFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>numEntriesFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumEntriesFunction([NotNull] PreprocessorParser.NumEntriesFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>opsysFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpsysFunction([NotNull] PreprocessorParser.OpsysFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>opsysFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpsysFunction([NotNull] PreprocessorParser.OpsysFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>propathFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropathFunction([NotNull] PreprocessorParser.PropathFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>propathFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropathFunction([NotNull] PreprocessorParser.PropathFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>proversionFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProversionFunction([NotNull] PreprocessorParser.ProversionFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>proversionFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProversionFunction([NotNull] PreprocessorParser.ProversionFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>processArchitectureFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcessArchitectureFunction([NotNull] PreprocessorParser.ProcessArchitectureFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>processArchitectureFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcessArchitectureFunction([NotNull] PreprocessorParser.ProcessArchitectureFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rIndexFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRIndexFunction([NotNull] PreprocessorParser.RIndexFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rIndexFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRIndexFunction([NotNull] PreprocessorParser.RIndexFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>randomFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRandomFunction([NotNull] PreprocessorParser.RandomFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>randomFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRandomFunction([NotNull] PreprocessorParser.RandomFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>replaceFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReplaceFunction([NotNull] PreprocessorParser.ReplaceFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>replaceFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReplaceFunction([NotNull] PreprocessorParser.ReplaceFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>rightTrimFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRightTrimFunction([NotNull] PreprocessorParser.RightTrimFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>rightTrimFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRightTrimFunction([NotNull] PreprocessorParser.RightTrimFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>roundFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRoundFunction([NotNull] PreprocessorParser.RoundFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>roundFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRoundFunction([NotNull] PreprocessorParser.RoundFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>squareRootFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSquareRootFunction([NotNull] PreprocessorParser.SquareRootFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>squareRootFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSquareRootFunction([NotNull] PreprocessorParser.SquareRootFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>stringFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringFunction([NotNull] PreprocessorParser.StringFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>stringFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringFunction([NotNull] PreprocessorParser.StringFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>substituteFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubstituteFunction([NotNull] PreprocessorParser.SubstituteFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>substituteFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubstituteFunction([NotNull] PreprocessorParser.SubstituteFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>substringFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubstringFunction([NotNull] PreprocessorParser.SubstringFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>substringFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubstringFunction([NotNull] PreprocessorParser.SubstringFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>timeFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeFunction([NotNull] PreprocessorParser.TimeFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>timeFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeFunction([NotNull] PreprocessorParser.TimeFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>todayFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTodayFunction([NotNull] PreprocessorParser.TodayFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>todayFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTodayFunction([NotNull] PreprocessorParser.TodayFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>trimFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrimFunction([NotNull] PreprocessorParser.TrimFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>trimFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrimFunction([NotNull] PreprocessorParser.TrimFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>truncateFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTruncateFunction([NotNull] PreprocessorParser.TruncateFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>truncateFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTruncateFunction([NotNull] PreprocessorParser.TruncateFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>weekDayFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWeekDayFunction([NotNull] PreprocessorParser.WeekDayFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>weekDayFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWeekDayFunction([NotNull] PreprocessorParser.WeekDayFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>yearFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterYearFunction([NotNull] PreprocessorParser.YearFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>yearFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitYearFunction([NotNull] PreprocessorParser.YearFunctionContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace ABLParser.Prorefactor.Proparser.Antlr
