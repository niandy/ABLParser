//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Antlr/Grammar/PreprocessorParser.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ABLParser.Prorefactor.Proparser.Antlr {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="PreprocessorParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IPreprocessorParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="PreprocessorParser.preproIfEval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreproIfEval([NotNull] PreprocessorParser.PreproIfEvalContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>not</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNot([NotNull] PreprocessorParser.NotContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>comparison</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparison([NotNull] PreprocessorParser.ComparisonContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>or</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOr([NotNull] PreprocessorParser.OrContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unaryPlus</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryPlus([NotNull] PreprocessorParser.UnaryPlusContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>and</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAnd([NotNull] PreprocessorParser.AndContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unaryMinus</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryMinus([NotNull] PreprocessorParser.UnaryMinusContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>atomExpr</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtomExpr([NotNull] PreprocessorParser.AtomExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multiply</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiply([NotNull] PreprocessorParser.MultiplyContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>plus</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlus([NotNull] PreprocessorParser.PlusContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>functionExpr</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionExpr([NotNull] PreprocessorParser.FunctionExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>stringOp</c>
	/// labeled alternative in <see cref="PreprocessorParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringOp([NotNull] PreprocessorParser.StringOpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>number</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumber([NotNull] PreprocessorParser.NumberContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>quotedString</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuotedString([NotNull] PreprocessorParser.QuotedStringContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>trueExpr</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTrueExpr([NotNull] PreprocessorParser.TrueExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>falseExpr</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFalseExpr([NotNull] PreprocessorParser.FalseExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unknownExpr</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnknownExpr([NotNull] PreprocessorParser.UnknownExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprInParen</c>
	/// labeled alternative in <see cref="PreprocessorParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprInParen([NotNull] PreprocessorParser.ExprInParenContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>absoluteFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAbsoluteFunction([NotNull] PreprocessorParser.AbsoluteFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ascFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAscFunction([NotNull] PreprocessorParser.AscFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dateFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateFunction([NotNull] PreprocessorParser.DateFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dayFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDayFunction([NotNull] PreprocessorParser.DayFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dbTypeFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDbTypeFunction([NotNull] PreprocessorParser.DbTypeFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>decimalFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDecimalFunction([NotNull] PreprocessorParser.DecimalFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>encodeFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEncodeFunction([NotNull] PreprocessorParser.EncodeFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>entryFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEntryFunction([NotNull] PreprocessorParser.EntryFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>etimeFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEtimeFunction([NotNull] PreprocessorParser.EtimeFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpFunction([NotNull] PreprocessorParser.ExpFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>fillFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFillFunction([NotNull] PreprocessorParser.FillFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>indexFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexFunction([NotNull] PreprocessorParser.IndexFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>integerFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerFunction([NotNull] PreprocessorParser.IntegerFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>int64Function</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInt64Function([NotNull] PreprocessorParser.Int64FunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>keywordFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeywordFunction([NotNull] PreprocessorParser.KeywordFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>keywordAllFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeywordAllFunction([NotNull] PreprocessorParser.KeywordAllFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lcFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLcFunction([NotNull] PreprocessorParser.LcFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>leftTrimFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLeftTrimFunction([NotNull] PreprocessorParser.LeftTrimFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lengthFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLengthFunction([NotNull] PreprocessorParser.LengthFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>libraryFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLibraryFunction([NotNull] PreprocessorParser.LibraryFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>logFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogFunction([NotNull] PreprocessorParser.LogFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lookupFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLookupFunction([NotNull] PreprocessorParser.LookupFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>maximumFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMaximumFunction([NotNull] PreprocessorParser.MaximumFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>memberFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberFunction([NotNull] PreprocessorParser.MemberFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>minimumFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMinimumFunction([NotNull] PreprocessorParser.MinimumFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>monthFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMonthFunction([NotNull] PreprocessorParser.MonthFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>numEntriesFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumEntriesFunction([NotNull] PreprocessorParser.NumEntriesFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>opsysFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpsysFunction([NotNull] PreprocessorParser.OpsysFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>propathFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPropathFunction([NotNull] PreprocessorParser.PropathFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>proversionFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProversionFunction([NotNull] PreprocessorParser.ProversionFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>processArchitectureFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProcessArchitectureFunction([NotNull] PreprocessorParser.ProcessArchitectureFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>rIndexFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRIndexFunction([NotNull] PreprocessorParser.RIndexFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>randomFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRandomFunction([NotNull] PreprocessorParser.RandomFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>replaceFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReplaceFunction([NotNull] PreprocessorParser.ReplaceFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>rightTrimFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRightTrimFunction([NotNull] PreprocessorParser.RightTrimFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>roundFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRoundFunction([NotNull] PreprocessorParser.RoundFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>squareRootFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSquareRootFunction([NotNull] PreprocessorParser.SquareRootFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>stringFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringFunction([NotNull] PreprocessorParser.StringFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>substituteFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubstituteFunction([NotNull] PreprocessorParser.SubstituteFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>substringFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubstringFunction([NotNull] PreprocessorParser.SubstringFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>timeFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeFunction([NotNull] PreprocessorParser.TimeFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>todayFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTodayFunction([NotNull] PreprocessorParser.TodayFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>trimFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTrimFunction([NotNull] PreprocessorParser.TrimFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>truncateFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTruncateFunction([NotNull] PreprocessorParser.TruncateFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>weekDayFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWeekDayFunction([NotNull] PreprocessorParser.WeekDayFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>yearFunction</c>
	/// labeled alternative in <see cref="PreprocessorParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitYearFunction([NotNull] PreprocessorParser.YearFunctionContext context);
}
} // namespace ABLParser.Prorefactor.Proparser.Antlr
